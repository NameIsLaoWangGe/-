{
  "code": "import { Admin, DataAdmin, Effects2D, TimerAdmin, Tools, _SceneName } from \"./Lwg\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _Game;\r\n(function (_Game) {\r\n    class _Data extends DataAdmin._Table {\r\n    }\r\n    _Data._property = {\r\n        name: 'name',\r\n        index: 'index',\r\n        color: 'color',\r\n    };\r\n    _Game._Data = _Data;\r\n    let _Label;\r\n    (function (_Label) {\r\n        _Label[\"trigger\"] = \"trigger\";\r\n        _Label[\"weapon\"] = \"weapon\";\r\n        _Label[\"enemy\"] = \"enemy\";\r\n    })(_Label = _Game._Label || (_Game._Label = {}));\r\n    _Game._fireControl = {\r\n        EnemyParent: null,\r\n        rotateSwitch: true,\r\n        moveDownY: 0,\r\n    };\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"WeaponSate\"] = \"_Game_WeaponSate\";\r\n        _Event[\"EnemyMove\"] = \"_Game_EnemyMove\";\r\n        _Event[\"calculateBlood\"] = \"_Game_calculateBlood\";\r\n        _Event[\"skillEnemy\"] = \"_Game_skillEnemy\";\r\n        _Event[\"closeScene\"] = \"_Game_closeScene\";\r\n        _Event[\"aimAddColor\"] = \"_Game_aimAddColor\";\r\n        _Event[\"aimSubColor\"] = \"_Game_aimSubColor\";\r\n        _Event[\"launch\"] = \"_WeaponSateType_launch\";\r\n    })(_Event = _Game._Event || (_Game._Event = {}));\r\n    let _EnemySate;\r\n    (function (_EnemySate) {\r\n        _EnemySate[\"activity\"] = \"_EnemySate_activity\";\r\n        _EnemySate[\"death\"] = \"_EnemySate_death\";\r\n    })(_EnemySate = _Game._EnemySate || (_Game._EnemySate = {}));\r\n    function _init() {\r\n    }\r\n    _Game._init = _init;\r\n    class _Shell extends Admin._ObjectBase {\r\n        lwgOnStart() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n            });\r\n        }\r\n    }\r\n    _Game._Shell = _Shell;\r\n    class _Stone extends _Shell {\r\n    }\r\n    _Game._Stone = _Stone;\r\n    class _EnemyBullet extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.speed = 2;\r\n        }\r\n        lwgOnStart() {\r\n            let GPoint = this._SceneImg('HeroContent').localToGlobal(new Laya.Point(this._SceneImg('Hero').x, this._SceneImg('Hero').y));\r\n            let p = new Laya.Point(this._gPoint.x - GPoint.x, this._gPoint.y - GPoint.y);\r\n            p.normalize();\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._Owner.x -= p.x * this.speed;\r\n                this._Owner.y -= p.y * this.speed;\r\n                Tools._Node.leaveStage(this._Owner, () => {\r\n                    this._Owner.removeSelf();\r\n                    return;\r\n                });\r\n            });\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                Tools._Node.checkTwoDistance(this._Owner, this._SceneImg('Hero'), 50, () => {\r\n                    this._Owner.removeSelf();\r\n                    this._evNotify(_Event.calculateBlood, [1]);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _Game._EnemyBullet = _EnemyBullet;\r\n    class _Enemy extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.time = 0;\r\n            this.state = '';\r\n        }\r\n        lwgOnStart() {\r\n            this.state = _EnemySate.activity;\r\n            TimerAdmin._frameRandomLoop(100, 1000, this, () => {\r\n                if (this.state == _EnemySate.activity) {\r\n                    let bullet = Tools._Node.createPrefab(_Res._list.prefab2D.EnemyBullet.prefab);\r\n                    bullet.addComponent(_EnemyBullet);\r\n                    let GPoint = this._Parent.localToGlobal(new Laya.Point(this._Owner.x, this._Owner.y));\r\n                    this._SceneImg('EBparrent').addChild(bullet);\r\n                    bullet.pos(GPoint.x, GPoint.y);\r\n                }\r\n            });\r\n            let rotate = Tools._Number.randomOneHalf() == 1 ? -0.5 : 0.5;\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                let point = Tools._Point.getRoundPos(this._Owner.rotation += rotate, this._SceneImg('MobileFrame').width / 2 + this._Owner.height / 2, new Laya.Point(this._SceneImg('LandContent').width / 2, this._SceneImg('LandContent').height / 2));\r\n                this._Owner.x = point.x;\r\n                this._Owner.y = point.y;\r\n            });\r\n        }\r\n    }\r\n    _Game._Enemy = _Enemy;\r\n    class _Weapon extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.launchAcc = 0;\r\n            this.dropAcc = 0;\r\n            this.stateType = {\r\n                launch: 'launch',\r\n                free: 'free',\r\n            };\r\n        }\r\n        get state() {\r\n            return this['Statevalue'] ? this['Statevalue'] : 'launch';\r\n        }\r\n        ;\r\n        set state(_state) {\r\n            this['Statevalue'] = _state;\r\n        }\r\n        ;\r\n        getSpeed() {\r\n            return 50 + 0.2;\r\n        }\r\n        getDropSpeed() {\r\n            return this.dropAcc += 0.5;\r\n        }\r\n        lwgOnAwake() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this.move();\r\n            });\r\n        }\r\n        move() {\r\n            if (this.getSpeed() > 0) {\r\n                let p = Tools._Point.angleAndLenByPoint(this._Owner.rotation - 90, this.getSpeed());\r\n                this._Owner.x += p.x;\r\n                this._Owner.y += p.y;\r\n            }\r\n            else {\r\n                this._Owner.y += this.getDropSpeed();\r\n            }\r\n            !Tools._Node.leaveStage(this._Owner, () => {\r\n                this._Owner.removeSelf();\r\n            }) && this.checkEnemy();\r\n        }\r\n        drop() {\r\n            this.state = this.stateType.free;\r\n            Laya.timer.clearAll(this);\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._Owner.y += 40;\r\n                this._Owner.rotation += 10;\r\n                Tools._Node.leaveStage(this._Owner, () => {\r\n                    this._Owner.removeSelf();\r\n                });\r\n            });\r\n        }\r\n        skill(Enemy) {\r\n            this._evNotify(_Event.skillEnemy, [1]);\r\n            for (let index = 0; index < 20; index++) {\r\n                Effects2D._Particle._spray(Laya.stage, this._gPoint, [0, 0], [10, 35]);\r\n            }\r\n            Enemy.removeSelf();\r\n            this._Owner.removeSelf();\r\n        }\r\n        checkEnemy() {\r\n            if (this.state === this.stateType.free) {\r\n                return;\r\n            }\r\n            if (this._SceneImg('FrontScenery').getChildByName('Stone')) {\r\n                for (let index = 0; index < this._SceneImg('FrontScenery').numChildren; index++) {\r\n                    const element = this._SceneImg('FrontScenery').getChildAt(index);\r\n                    if (element.name == 'Stone') {\r\n                        let gPStone = this._SceneImg('FrontScenery').localToGlobal(new Laya.Point(element.x, element.y));\r\n                        if (gPStone.distance(this._gPoint.x, this._gPoint.y) < 30) {\r\n                            this.drop();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let index = 0; index < _Game._fireControl.EnemyParent.numChildren; index++) {\r\n                const Enemy = _Game._fireControl.EnemyParent.getChildAt(index);\r\n                let gPEnemy = this._SceneImg('EnemyParent').localToGlobal(new Laya.Point(Enemy.x, Enemy.y));\r\n                if (gPEnemy.distance(this._gPoint.x, this._gPoint.y) < 50) {\r\n                    let Shell = Enemy.getChildByName('Shell');\r\n                    if (Shell) {\r\n                        const landContentGP = this._SceneImg('Content').localToGlobal(new Laya.Point(this._SceneImg('LandContent').x, this._SceneImg('LandContent').y));\r\n                        let angle = Tools._Point.pointByAngle(landContentGP.x - this._gPoint.x, landContentGP.y - this._gPoint.y) + 90;\r\n                        if (210 < angle && angle < 330) {\r\n                            this.drop();\r\n                        }\r\n                        else {\r\n                            this.skill(Enemy);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.skill(Enemy);\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            const LandContentGP = this._SceneImg('Content').localToGlobal(new Laya.Point(this._SceneImg('LandContent').x, this._SceneImg('LandContent').y));\r\n            if (LandContentGP.distance(this._gPoint.x, this._gPoint.y) < 150) {\r\n                Laya.timer.clearAll(this);\r\n                this.state = this.stateType.free;\r\n                const lP = this._SceneImg('LandContent').globalToLocal(this._gPoint);\r\n                this._SceneImg('LandContent').addChild(this._Owner);\r\n                this._Owner.pos(lP.x, lP.y);\r\n                this._Owner.rotation -= this._SceneImg('LandContent').rotation;\r\n                const mask = new Laya.Sprite;\r\n                mask.size(200, 300);\r\n                mask.pos(0, Tools._Number.randomOneBySection(40, 60));\r\n                mask.loadImage('Lwg/UI/ui_l_orthogon_white.png');\r\n                this._Owner.mask = mask;\r\n            }\r\n        }\r\n    }\r\n    _Game._Weapon = _Weapon;\r\n    class Game extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Hero = {\r\n                mouseP: null,\r\n                ContentFP: null,\r\n                expand: 250,\r\n                onoff: false,\r\n                init: () => {\r\n                    this.Hero.ContentFP = new Laya.Point(this._ImgVar('Content').x, this._ImgVar('Content').y);\r\n                },\r\n                move: (e) => {\r\n                    if (this.Hero.mouseP) {\r\n                        let diffX = e.stageX - this.Hero.mouseP.x;\r\n                        let diffY = e.stageY - this.Hero.mouseP.y;\r\n                        this._ImgVar('HeroContent').x += diffX;\r\n                        this._ImgVar('HeroContent').y += diffY;\r\n                        this.Hero.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n                        if (this._ImgVar('HeroContent').x > Laya.stage.width) {\r\n                            this._ImgVar('HeroContent').x = Laya.stage.width;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').x < 0) {\r\n                            this._ImgVar('HeroContent').x = 0;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').y <= 0) {\r\n                            this._ImgVar('HeroContent').y = 0;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').y > Laya.stage.height - 200) {\r\n                            this._ImgVar('HeroContent').y = Laya.stage.height - 200;\r\n                            this.Hero.onoff = true;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n            this.Hero.init();\r\n        }\r\n        lwgOnStart() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._ImgVar('LandContent').rotation += 0.1;\r\n            });\r\n            _Game._fireControl.EnemyParent = this._ImgVar('EnemyParent');\r\n            for (let index = 0; index < this._ImgVar('EnemyParent').numChildren; index++) {\r\n                const element = this._ImgVar('EnemyParent').getChildAt(index);\r\n                Tools._Node.changePivot(element, element.width / 2, element.height / 2);\r\n                element.addComponent(_Enemy);\r\n            }\r\n        }\r\n        lwgEvent() {\r\n            this._evReg(_Event.aimAddColor, (Weapon) => {\r\n                if (this._ImgVar('Bow')['launch'] !== Weapon) {\r\n                    this._ImgVar('Bow')['launch'] = Weapon;\r\n                    this._ImgVar('Bow').skin = `Game/UI/Game/Hero/Hero_01_bow_${Weapon['_data'][_Data._property.color]}.png`;\r\n                }\r\n            });\r\n            this._evReg(_Event.aimSubColor, (Weapon) => {\r\n                if (this._ImgVar('Bow')['launch'] == Weapon) {\r\n                    this._ImgVar('Bow').skin = `Game/UI/Game/Hero/Hero_01_bow_normalc.png`;\r\n                    this._ImgVar('Bow')['launch'] = null;\r\n                }\r\n            });\r\n            let bloodNum = 20;\r\n            let _width = 100;\r\n            this._evReg(_Event.calculateBlood, (number) => {\r\n                let Blood = this._ImgVar('Blood').getChildAt(0);\r\n                Blood.width = Blood.width - _width / 20;\r\n                bloodNum -= number;\r\n                if (!this['bloodNumSwitch']) {\r\n                    if (bloodNum <= 0) {\r\n                        this['bloodNumSwitch'] = true;\r\n                        this._openScene(_SceneName.Defeated, false);\r\n                    }\r\n                }\r\n            });\r\n            let enemyNum = this._ImgVar('EnemyParent').numChildren;\r\n            this._evReg(_Event.skillEnemy, () => {\r\n                enemyNum -= 1;\r\n                if (!this['EnemyNumSwitch']) {\r\n                    if (enemyNum <= 0) {\r\n                        this['EnemyNumSwitch'] = true;\r\n                        this._openScene(_SceneName.Victory, false);\r\n                    }\r\n                }\r\n            });\r\n            this._evReg(_Event.closeScene, () => {\r\n                this._closeScene();\r\n            });\r\n        }\r\n        lwgButton() {\r\n        }\r\n        create(color, x, y) {\r\n            const Weapon = Tools._Node.createPrefab(_Res._list.prefab2D.Weapon.prefab);\r\n            this._ImgVar('WeaponParent').addChild(Weapon);\r\n            Weapon.addComponent(_Weapon);\r\n            Weapon.pos(x, y);\r\n            const Pic = Weapon.getChildByName('Pic');\r\n            Pic.skin = `Game/UI/Game/Hero/Hero_01_weapon_${color}.png`;\r\n            Weapon.name = color;\r\n            return Weapon;\r\n        }\r\n        lwgOnStageDown(e) {\r\n            this.Hero.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n        }\r\n        lwgOnStageMove(e) {\r\n            this.Hero.move(e);\r\n        }\r\n        lwgOnStageUp() {\r\n            let color;\r\n            this.create('blue', this._ImgVar('HeroContent').x, this._ImgVar('HeroContent').y);\r\n            this.Hero.mouseP = null;\r\n        }\r\n    }\r\n    _Game.Game = Game;\r\n})(_Game || (_Game = {}));\r\nexport default _Game.Game;\r\n",
  "references": [
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/Lwg.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PreLoad.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PropTry.ts"
  ]
}
