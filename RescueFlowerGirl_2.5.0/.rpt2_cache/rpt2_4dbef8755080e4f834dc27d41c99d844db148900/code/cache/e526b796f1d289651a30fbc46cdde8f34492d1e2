{
  "code": "import { Admin, EventAdmin, TimerAdmin, Tools, _SceneName } from \"./Lwg\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _Game;\r\n(function (_Game) {\r\n    class _Data {\r\n    }\r\n    _Data._property = {\r\n        name: 'name',\r\n        index: 'index',\r\n        color: 'color',\r\n    };\r\n    _Data._arr = [\r\n        {\r\n            index: 1,\r\n            name: 'blue',\r\n            color: 'blue',\r\n        },\r\n        {\r\n            index: 2,\r\n            name: 'red',\r\n            color: 'red',\r\n        },\r\n        {\r\n            index: 3,\r\n            name: 'yellow',\r\n            color: 'yellow',\r\n        }, {\r\n            index: 4,\r\n            name: 'red',\r\n            color: 'red',\r\n        }, {\r\n            index: 5,\r\n            name: 'yellow',\r\n            color: 'yellow',\r\n        }, {\r\n            index: 6,\r\n            name: 'red',\r\n            color: 'red',\r\n        }, {\r\n            index: 7,\r\n            name: 'blue',\r\n            color: 'blue',\r\n        }, {\r\n            index: 8,\r\n            name: 'yellow',\r\n            color: 'yellow',\r\n        },\r\n    ];\r\n    _Game._Data = _Data;\r\n    let _Label;\r\n    (function (_Label) {\r\n        _Label[\"trigger\"] = \"trigger\";\r\n        _Label[\"weapon\"] = \"weapon\";\r\n        _Label[\"enemy\"] = \"enemy\";\r\n    })(_Label = _Game._Label || (_Game._Label = {}));\r\n    _Game._fireControl = {\r\n        Aim: null,\r\n        EnemyParent: null,\r\n        rotateSwitch: true,\r\n        moveDownY: 0,\r\n        get moveRotateSpeed() {\r\n            return this['_rotateSpeed'] ? this['_rotateSpeed'] : 0;\r\n        },\r\n        set moveRotateSpeed(speed) {\r\n            if (!_Game._fireControl.rotateSwitch) {\r\n                this['_rotateSpeed'] = speed;\r\n                EventAdmin._notify(_Event.WeaponSate, [_WeaponSateType.mouseMove]);\r\n            }\r\n        },\r\n    };\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"WeaponSate\"] = \"_Game_WeaponSate\";\r\n        _Event[\"EnemyMove\"] = \"_Game_EnemyMove\";\r\n        _Event[\"calculateBlood\"] = \"_Game_calculateBlood\";\r\n        _Event[\"destroyEnemy\"] = \"_Game_destroyEnemy\";\r\n        _Event[\"closeScene\"] = \"_Game_closeScene\";\r\n        _Event[\"aimAddColor\"] = \"_Game_aimAddColor\";\r\n        _Event[\"aimSubColor\"] = \"_Game_aimSubColor\";\r\n    })(_Event = _Game._Event || (_Game._Event = {}));\r\n    let _WeaponSateType;\r\n    (function (_WeaponSateType) {\r\n        _WeaponSateType[\"rotate\"] = \"_WeaponSateType_rotate\";\r\n        _WeaponSateType[\"mouseMove\"] = \"_WeaponSateType_mouseMove\";\r\n        _WeaponSateType[\"launch\"] = \"_WeaponSateType_launch\";\r\n        _WeaponSateType[\"free\"] = \"_WeaponSateType_free\";\r\n    })(_WeaponSateType = _Game._WeaponSateType || (_Game._WeaponSateType = {}));\r\n    let _EnemySate;\r\n    (function (_EnemySate) {\r\n        _EnemySate[\"activity\"] = \"_EnemySate_activity\";\r\n        _EnemySate[\"death\"] = \"_EnemySate_death\";\r\n    })(_EnemySate = _Game._EnemySate || (_Game._EnemySate = {}));\r\n    function _init() {\r\n    }\r\n    _Game._init = _init;\r\n    class _EnemyBullet extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.speed = 1;\r\n        }\r\n        lwgOnStart() {\r\n            let GPoint = this._SceneImg('HeroContent').localToGlobal(new Laya.Point(this._SceneImg('Hero').x, this._SceneImg('Hero').y));\r\n            let p = new Laya.Point(this._Owner.x - GPoint.x, this._Owner.y - GPoint.y);\r\n            p.normalize();\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._Owner.x -= p.x * this.speed;\r\n                this._Owner.y -= p.y * this.speed;\r\n                Tools._Node.leaveStage(this._Owner, () => {\r\n                    this._Owner.removeSelf();\r\n                    return;\r\n                });\r\n            });\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                Tools._Node.checkTwoDistance(this._Owner, this._SceneImg('Hero'), 50, () => {\r\n                    this._Owner.removeSelf();\r\n                    this._evNotify(_Event.calculateBlood, [1]);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _Game._EnemyBullet = _EnemyBullet;\r\n    class _Enemy extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.time = 0;\r\n            this.state = '';\r\n        }\r\n        lwgOnStart() {\r\n            this.state = _EnemySate.activity;\r\n            TimerAdmin._frameRandomLoop(100, 1000, this, () => {\r\n                if (this.state == _EnemySate.activity) {\r\n                    let bullet = Tools._Node.createPrefab(_Res._list.prefab2D.EnemyBullet.prefab);\r\n                    bullet.addComponent(_EnemyBullet);\r\n                    let GPoint = this._Parent.localToGlobal(new Laya.Point(this._Owner.x, this._Owner.y));\r\n                    this._Scene.addChild(bullet);\r\n                    bullet.pos(GPoint.x, GPoint.y);\r\n                }\r\n            });\r\n            let rotate = Tools._Number.randomOneHalf() == 1 ? -0.5 : 0.5;\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                let point = Tools._Point.getRoundPos(this._Owner.rotation += rotate, this._SceneImg('MobileFrame').width / 2 + this._Owner.height / 2, new Laya.Point(this._SceneImg('LandContent').width / 2, this._SceneImg('LandContent').height / 2));\r\n                this._Owner.x = point.x;\r\n                this._Owner.y = point.y;\r\n            });\r\n        }\r\n    }\r\n    _Game._Enemy = _Enemy;\r\n    class _Weapon extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.baseSpeed = 60;\r\n            this.accelerated = 1;\r\n        }\r\n        get state() {\r\n            return this['Statevalue'];\r\n        }\r\n        ;\r\n        set state(_state) {\r\n            this['Statevalue'] = _state;\r\n        }\r\n        ;\r\n        speed() {\r\n            if (!this['weaponGetTime']) {\r\n                this['weaponGetTime'] = 0;\r\n            }\r\n            this['weaponGetTime']++;\r\n            this.baseSpeed += this.accelerated;\r\n            let speed = this.baseSpeed * this['weaponGetTime'];\r\n            return this.distance + speed;\r\n        }\r\n        lwgOnAwake() {\r\n            this.distance = this._Parent.width / 2;\r\n            this.rotateRadius = this._Parent.width / 2;\r\n        }\r\n        lwgEventRegister() {\r\n            var getAim = () => {\r\n                let Fulcrum = this._SceneImg('Fulcrum');\r\n                let point = _Game._fireControl.Aim.localToGlobal(new Laya.Point(Fulcrum.x, Fulcrum.y));\r\n                let g_OwnerXY = this._Parent.localToGlobal(new Laya.Point(this._Owner.x, this._Owner.y));\r\n                if (point.distance(g_OwnerXY.x, g_OwnerXY.y) < 50) {\r\n                    this._Owner.scale(1.2, 1.2);\r\n                    this._evNotify(_Event.aimAddColor, [this._Owner]);\r\n                }\r\n                else {\r\n                    this._Owner.scale(1, 1);\r\n                    this._evNotify(_Event.aimSubColor, [this._Owner]);\r\n                }\r\n            };\r\n            var move = (rSpeed, radius) => {\r\n                let point = Tools._Point.getRoundPos(rSpeed ? this._Owner.rotation += rSpeed : this._Owner.rotation, radius, new Laya.Point(this._Parent.width / 2, this._Parent.height / 2));\r\n                this._Owner.x = point.x;\r\n                this._Owner.y = point.y;\r\n            };\r\n            this._evReg(_Event.WeaponSate, (type) => {\r\n                if (this.state == _WeaponSateType.launch || this.state == _WeaponSateType.free) {\r\n                    return;\r\n                }\r\n                Laya.timer.clearAll(this);\r\n                if (type == _WeaponSateType.rotate) {\r\n                    TimerAdmin._frameLoop(1, this, () => {\r\n                        move(_Game._fireControl.moveRotateSpeed > 0 ? 0.1 : -0.1, this.rotateRadius);\r\n                        getAim();\r\n                    });\r\n                }\r\n                else if (type == _WeaponSateType.mouseMove) {\r\n                    move(_Game._fireControl.moveRotateSpeed, this.rotateRadius);\r\n                    getAim();\r\n                }\r\n                else if (type == _WeaponSateType.launch) {\r\n                    if (this._Owner.scaleX == 1.2) {\r\n                        this.state = _WeaponSateType.free;\r\n                        TimerAdmin._frameLoop(1, this, () => {\r\n                            this.state = _WeaponSateType.launch;\r\n                            move(null, this.speed());\r\n                            for (let index = 0; index < _Game._fireControl.EnemyParent.numChildren; index++) {\r\n                                const element = _Game._fireControl.EnemyParent.getChildAt(index);\r\n                                let point = _Game._fireControl.EnemyParent.localToGlobal(new Laya.Point(element.x, element.y));\r\n                                let g_OwnerXY = this._Parent.localToGlobal(new Laya.Point(this._Owner.x, this._Owner.y));\r\n                                if (point.distance(g_OwnerXY.x, g_OwnerXY.y) < 50) {\r\n                                    this.state = _WeaponSateType.free;\r\n                                    Laya.timer.clearAll(this);\r\n                                    if (this._Owner['_data']['color'] == element.name.substr(5)) {\r\n                                        this._evNotify(_Event.destroyEnemy, [1]);\r\n                                        element.removeSelf();\r\n                                        this._Owner.removeSelf();\r\n                                    }\r\n                                    else {\r\n                                        TimerAdmin._frameLoop(1, this, () => {\r\n                                            this._Owner.y += 40;\r\n                                            this._Owner.rotation += 10;\r\n                                            if (this._Owner.y > Laya.stage.height) {\r\n                                                this._Owner.removeSelf();\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    return;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        TimerAdmin._frameLoop(1, this, () => {\r\n                            move(_Game._fireControl.moveRotateSpeed > 0 ? 0.1 : -0.1, this.rotateRadius);\r\n                            getAim();\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _Game._Weapon = _Weapon;\r\n    class Game extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.aimControl = {\r\n                moveDownY: 0,\r\n            };\r\n        }\r\n        lwgOnEnable() {\r\n            for (let index = 0; index < _Data._arr.length; index++) {\r\n                let Weapon = Tools._Node.createPrefab(_Res._list.prefab2D.Weapon.prefab);\r\n                this._ImgVar('WeaponParent').addChild(Weapon);\r\n                let Pic = Weapon.getChildByName('Pic');\r\n                let point = Tools._Point.getRoundPos(index / _Data._arr.length * 360, 500, new Laya.Point(this._ImgVar('WeaponParent').width / 2, this._ImgVar('WeaponParent').height / 2));\r\n                Weapon.x = point.x;\r\n                Weapon.y = point.y;\r\n                Weapon.rotation = index / _Data._arr.length * 360;\r\n                Pic.skin = `Game/UI/Game/Hero/Hero_01_weapon_${_Data._arr[index]['name']}.png`;\r\n                Weapon.addComponent(_Weapon);\r\n                Weapon.name = _Data._arr[index][_Data._property.color] + index;\r\n                Weapon['_data'] = _Data._arr[index];\r\n            }\r\n            this._evNotify(_Event.WeaponSate, [_WeaponSateType.rotate]);\r\n        }\r\n        lwgOnStart() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._ImgVar('LandContent').rotation += 0.1;\r\n            });\r\n            _Game._fireControl.EnemyParent = this._ImgVar('EnemyParent');\r\n            _Game._fireControl.Aim = this._ImgVar('Aim');\r\n            for (let index = 0; index < this._ImgVar('EnemyParent').numChildren; index++) {\r\n                const element = this._ImgVar('EnemyParent').getChildAt(index);\r\n                Tools._Node.changePivot(element, element.width / 2, element.height / 2);\r\n                element.addComponent(_Enemy);\r\n            }\r\n        }\r\n        lwgEventRegister() {\r\n            this._evReg(_Event.aimAddColor, (Weapon) => {\r\n                if (this._ImgVar('Bow')['launch'] !== Weapon) {\r\n                    this._ImgVar('Bow')['launch'] = Weapon;\r\n                    this._ImgVar('Bow').skin = `Game/UI/Game/Hero/Hero_01_bow_${Weapon['_data'][_Data._property.color]}.png`;\r\n                }\r\n            });\r\n            this._evReg(_Event.aimSubColor, (Weapon) => {\r\n                if (this._ImgVar('Bow')['launch'] == Weapon) {\r\n                    this._ImgVar('Bow').skin = `Game/UI/Game/Hero/Hero_01_bow_normalc.png`;\r\n                    this._ImgVar('Bow')['launch'] = null;\r\n                }\r\n            });\r\n            let bloodNum = 20;\r\n            let _width = 100;\r\n            this._evReg(_Event.calculateBlood, (number) => {\r\n                let Blood = this._ImgVar('Blood').getChildAt(0);\r\n                Blood.width = Blood.width - _width / 20;\r\n                bloodNum -= number;\r\n                if (!this['bloodNumSwitch']) {\r\n                    if (bloodNum <= 0) {\r\n                        this['bloodNumSwitch'] = true;\r\n                        this._openScene(_SceneName.Defeated, false);\r\n                    }\r\n                }\r\n            });\r\n            let enemyNum = this._ImgVar('EnemyParent').numChildren;\r\n            this._evReg(_Event.destroyEnemy, () => {\r\n                enemyNum -= 1;\r\n                if (!this['EnemyNumSwitch']) {\r\n                    if (enemyNum <= 0) {\r\n                        this['EnemyNumSwitch'] = true;\r\n                        this._openScene(_SceneName.Victory, false);\r\n                    }\r\n                }\r\n            });\r\n            this._evReg(_Event.closeScene, () => {\r\n                this._closeScene();\r\n            });\r\n        }\r\n        lwgBtnRegister() {\r\n            this._ImgVar('AimOperation').height = this._ImgVar('WeaponOperation').height = Laya.stage.height;\r\n            this._btnFour(this._ImgVar('WeaponOperation'), (e) => {\r\n                _Game._fireControl.rotateSwitch = false;\r\n                _Game._fireControl.moveDownY = e.stageY;\r\n            }, (e) => {\r\n                if (!_Game._fireControl.rotateSwitch && Math.abs(_Game._fireControl.moveDownY - e.stageY) > 10) {\r\n                    if (_Game._fireControl.moveDownY - e.stageY > 10) {\r\n                        _Game._fireControl.moveRotateSpeed = -2;\r\n                    }\r\n                    else {\r\n                        _Game._fireControl.moveRotateSpeed = 2;\r\n                    }\r\n                    _Game._fireControl.moveDownY = e.stageY;\r\n                    this._evNotify(_Event.WeaponSate, [_WeaponSateType.mouseMove]);\r\n                }\r\n            }, (e) => {\r\n                _Game._fireControl.rotateSwitch = true;\r\n                _Game._fireControl.moveDownY = 0;\r\n                this._evNotify(_Event.WeaponSate, [_WeaponSateType.launch]);\r\n            }, (e) => {\r\n                _Game._fireControl.rotateSwitch = true;\r\n                _Game._fireControl.moveDownY = 0;\r\n            });\r\n            this._btnFour(this._ImgVar('AimOperation'), (e) => {\r\n                this.aimControl.moveDownY = e.stageY;\r\n            }, (e) => {\r\n                if (this.aimControl.moveDownY && Math.abs(this.aimControl.moveDownY - e.stageY) > 5) {\r\n                    if (this.aimControl.moveDownY - e.stageY > 0) {\r\n                        this._ImgVar('Aim').rotation += 2.5;\r\n                    }\r\n                    else {\r\n                        this._ImgVar('Aim').rotation -= 2.5;\r\n                    }\r\n                    if (this._ImgVar('Aim').rotation < -45) {\r\n                        this._ImgVar('Aim').rotation = -45;\r\n                    }\r\n                    if (45 < this._ImgVar('Aim').rotation) {\r\n                        this._ImgVar('Aim').rotation = 45;\r\n                    }\r\n                    this.aimControl.moveDownY = e.stageY;\r\n                }\r\n            }, (e) => {\r\n                this.aimControl.moveDownY = null;\r\n            }, (e) => {\r\n                this.aimControl.moveDownY = null;\r\n            });\r\n            this._btnFour(this._ImgVar('Hero'), () => {\r\n                this['HeroMove'] = true;\r\n            }, null, () => {\r\n                this['HeroMove'] = false;\r\n            }, null);\r\n        }\r\n        lwgOnStageMove(e) {\r\n            if (this['HeroMove']) {\r\n                this._ImgVar('HeroContent').x = e.stageX;\r\n                this._ImgVar('HeroContent').y = e.stageY;\r\n            }\r\n        }\r\n    }\r\n    _Game.Game = Game;\r\n})(_Game || (_Game = {}));\r\nexport default _Game.Game;\r\n",
  "references": [
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/Lwg.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PreLoad.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PropTry.ts"
  ]
}
