{
  "code": "import { Admin, TimerAdmin, Tools, _SceneName } from \"./Lwg\";\r\nimport { _LwgEvent } from \"./LwgEvent\";\r\nimport { _Boss } from \"./_Boss\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _Game;\r\n(function (_Game) {\r\n    class _Weapon extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.launchAcc = 0;\r\n            this.dropAcc = 0;\r\n            this.stateType = {\r\n                launch: 'launch',\r\n                free: 'free',\r\n            };\r\n        }\r\n        get state() {\r\n            return this['Statevalue'] ? this['Statevalue'] : 'launch';\r\n        }\r\n        ;\r\n        set state(_state) {\r\n            this['Statevalue'] = _state;\r\n        }\r\n        ;\r\n        getSpeed() {\r\n            return 20 + 0.1;\r\n        }\r\n        getDropSpeed() {\r\n            return this.dropAcc += 0.5;\r\n        }\r\n        lwgOnAwake() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this.move();\r\n            });\r\n        }\r\n        move() {\r\n            if (this.getSpeed() > 0) {\r\n                let p = Tools._Point.angleAndLenByPoint(this._Owner.rotation - 90, this.getSpeed());\r\n                this._Owner.x += p.x;\r\n                this._Owner.y += p.y;\r\n            }\r\n            else {\r\n                this._Owner.y += this.getDropSpeed();\r\n            }\r\n            !Tools._Node.leaveStage(this._Owner, () => {\r\n                this._Owner.removeSelf();\r\n            }) && this.checkEnemy();\r\n        }\r\n        drop() {\r\n            this.state = this.stateType.free;\r\n            Laya.timer.clearAll(this);\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._Owner.y += 40;\r\n                this._Owner.rotation += 10;\r\n                Tools._Node.leaveStage(this._Owner, () => {\r\n                    this._Owner.removeSelf();\r\n                });\r\n            });\r\n        }\r\n        skill(Enemy) {\r\n            this._evNotify(_LwgEvent.Game.enemyBlood, [Enemy, 1]);\r\n            this._Owner.removeSelf();\r\n        }\r\n        checkEnemy() {\r\n            if (this.state === this.stateType.free) {\r\n                return;\r\n            }\r\n            if (this._SceneImg('FrontScenery').getChildByName('Stone')) {\r\n                for (let index = 0; index < this._SceneImg('FrontScenery').numChildren; index++) {\r\n                    const element = this._SceneImg('FrontScenery').getChildAt(index);\r\n                    if (element.name == 'Stone') {\r\n                        let gPStone = this._SceneImg('FrontScenery').localToGlobal(new Laya.Point(element.x, element.y));\r\n                        if (gPStone.distance(this._gPoint.x, this._gPoint.y) < 30) {\r\n                            this.drop();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let index = 0; index < this._SceneImg('EnemyParent').numChildren; index++) {\r\n                const Enemy = this._SceneImg('EnemyParent').getChildAt(index);\r\n                let gPEnemy = this._SceneImg('EnemyParent').localToGlobal(new Laya.Point(Enemy.x, Enemy.y));\r\n                if (gPEnemy.distance(this._gPoint.x, this._gPoint.y) < 50) {\r\n                    let Shell = Enemy.getChildByName('Shell');\r\n                    if (Shell) {\r\n                        const landContentGP = this._SceneImg('Content').localToGlobal(new Laya.Point(this._SceneImg('Land').x, this._SceneImg('Land').y));\r\n                        let angle = Tools._Point.pointByAngle(landContentGP.x - this._gPoint.x, landContentGP.y - this._gPoint.y) + 90;\r\n                        if (210 < angle && angle < 330) {\r\n                            this.drop();\r\n                        }\r\n                        else {\r\n                            this.skill(Enemy);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.skill(Enemy);\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            let Ground;\r\n            const ran = Tools._Number.randomOneInt(0, 2);\r\n            if (ran == 0) {\r\n                Ground = this._SceneImg('Land').getChildByName('FrontGround');\r\n            }\r\n            else if (ran == 1) {\r\n                Ground = this._SceneImg('Land').getChildByName('MiddleGround');\r\n            }\r\n            else if (ran == 2) {\r\n                Ground = this._SceneImg('Land').getChildByName('BehindGround');\r\n            }\r\n            const GroundGP = this._SceneImg('Land').localToGlobal(new Laya.Point(Ground.x, Ground.y));\r\n            if (GroundGP.distance(this._gPoint.x, this._gPoint.y) < 160) {\r\n                Laya.timer.clearAll(this);\r\n                this.state = this.stateType.free;\r\n                const lP = Ground.globalToLocal(this._gPoint);\r\n                let ArrowParent = Ground.getChildByName('ArrowParent');\r\n                if (!Ground.getChildByName('ArrowParent')) {\r\n                    ArrowParent = new Laya.Sprite;\r\n                    ArrowParent.name = 'ArrowParent';\r\n                    Ground.addChild(ArrowParent);\r\n                    ArrowParent.size(Ground.width, Ground.height);\r\n                }\r\n                ArrowParent.cacheAs = \"bitmap\";\r\n                ArrowParent.addChild(this._Owner);\r\n                this._Owner.pos(lP.x, lP.y);\r\n                this._Owner.rotation -= this._SceneImg('Land').rotation;\r\n                const Pic = this._Owner.getChildByName('Pic');\r\n                Pic.y -= Tools._Number.randomOneBySection(20);\r\n                const mask = new Laya.Sprite;\r\n                mask.size(200, 300);\r\n                mask.pos(0, Tools._Number.randomOneBySection(20, 30));\r\n                mask.loadImage('Lwg/UI/ui_l_orthogon_white.png');\r\n                this._Owner.mask = mask;\r\n                if (ArrowParent.numChildren > 5) {\r\n                    const tex = ArrowParent.drawToTexture(ArrowParent.width, ArrowParent.height, 0, 0);\r\n                    ArrowParent.texture && ArrowParent.texture.destroy();\r\n                    ArrowParent.texture = tex;\r\n                    Tools._Node.removeAllChildren(ArrowParent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _Game._Weapon = _Weapon;\r\n    class Game extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Hero = {\r\n                mouseP: null,\r\n                move: (e) => {\r\n                    if (this.Hero.mouseP) {\r\n                        let diffX = e.stageX - this.Hero.mouseP.x;\r\n                        let diffY = e.stageY - this.Hero.mouseP.y;\r\n                        this._ImgVar('HeroContent').x += diffX;\r\n                        this._ImgVar('HeroContent').y += diffY;\r\n                        this.Hero.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n                        if (this._ImgVar('HeroContent').x > Laya.stage.width) {\r\n                            this._ImgVar('HeroContent').x = Laya.stage.width;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').x < 0) {\r\n                            this._ImgVar('HeroContent').x = 0;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').y <= 0) {\r\n                            this._ImgVar('HeroContent').y = 0;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').y > Laya.stage.height) {\r\n                            this._ImgVar('HeroContent').y = Laya.stage.height;\r\n                        }\r\n                    }\r\n                },\r\n                createWeapon: (color, x, y) => {\r\n                    const Weapon = Tools._Node.createPrefab(_Res._list.prefab2D.Weapon.prefab);\r\n                    this._ImgVar('WeaponParent').addChild(Weapon);\r\n                    Weapon.addComponent(_Weapon);\r\n                    Weapon.pos(x, y);\r\n                    const Pic = Weapon.getChildByName('Pic');\r\n                    Pic.skin = `Game/UI/Game/Hero/Hero_01_weapon_${color}.png`;\r\n                    Weapon.name = color;\r\n                    return Weapon;\r\n                }\r\n            };\r\n            this.time = 0;\r\n        }\r\n        lwgOnAwake() {\r\n            this.EnemyData = new _Boss._EnemyData(this._ImgVar('EnemyParent'));\r\n            this.EnemyData.createEnmey();\r\n            _Boss._BossData._ins().createLevelBoss(this._ImgVar('EnemyParent'));\r\n        }\r\n        lwgOnStart() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._ImgVar('Land').rotation += 0.1;\r\n            });\r\n        }\r\n        lwgEvent() {\r\n            let bloodNum = 20;\r\n            let _width = 100;\r\n            this._evReg(_LwgEvent.Game.heroBlood, (number) => {\r\n                let Blood = this._ImgVar('Blood').getChildAt(0);\r\n                Blood.width = Blood.width - _width / 20;\r\n                bloodNum -= number;\r\n                if (!this['bloodNumSwitch']) {\r\n                    if (bloodNum <= 0) {\r\n                        this['bloodNumSwitch'] = true;\r\n                        this._openScene(_SceneName.Defeated, false);\r\n                    }\r\n                }\r\n            });\r\n            this._evReg(_LwgEvent.Game.closeScene, () => {\r\n                this._closeScene();\r\n            });\r\n        }\r\n        lwgOnStageDown(e) {\r\n            this.Hero.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n        }\r\n        lwgOnStageMove(e) {\r\n            this.Hero.move(e);\r\n        }\r\n        lwgOnStageUp() {\r\n            let color;\r\n            this.time++;\r\n            if (this.time == 1) {\r\n                color = 'blue';\r\n            }\r\n            else if (this.time == 2) {\r\n                color = 'yellow';\r\n            }\r\n            else if (this.time == 3) {\r\n                color = 'red';\r\n                this.time = 0;\r\n            }\r\n            this.Hero.createWeapon(color, this._ImgVar('HeroContent').x, this._ImgVar('HeroContent').y);\r\n            this.Hero.mouseP = null;\r\n        }\r\n    }\r\n    _Game.Game = Game;\r\n})(_Game || (_Game = {}));\r\nexport default _Game.Game;\r\n",
  "references": [
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/Lwg.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/LwgEvent.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_Boss.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PreLoad.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PropTry.ts"
  ]
}
