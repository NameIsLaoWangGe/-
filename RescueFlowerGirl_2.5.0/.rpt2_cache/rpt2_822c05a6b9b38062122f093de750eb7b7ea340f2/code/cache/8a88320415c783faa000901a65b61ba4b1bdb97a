{
  "code": "import { TimerAdmin, Tools, _SceneName } from \"../Frame/Lwg\";\r\nimport { _GameEvent } from \"./_GameEvent\";\r\nimport { HeroWeapon } from \"./HeroWeapon\";\r\nimport { _Res } from \"../Frame/_PreLoad\";\r\nimport BloodBase from \"./BloodBase\";\r\nexport default class Hero extends BloodBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.attack_S_Angle = [\r\n            [0],\r\n            [-5, 5],\r\n            [-10, 0, 10],\r\n            [-15, -5, 5, 15],\r\n            [-20, -10, 0, 10, 20],\r\n            [-25, -15, 5, 5, 15, 25],\r\n            [-30, -20, -10, 0, 10, 20, 30],\r\n            [-35, -25, -15, 5, 5, 15, 25, 35]\r\n        ];\r\n    }\r\n    lwgOnAwake() {\r\n        this.bloodInit(50);\r\n        this.attackInterval = 10;\r\n        this.ballisticNum = 1;\r\n        this.ballisticPos = [\r\n            [[0, 0]],\r\n            [[-20, 0], [20, 0]],\r\n            [[-20, 0], [0, 0], [20, 0]],\r\n            [[-30, 0], [-10, 0], [10, 0], [30, 0]],\r\n            [[-40, 0], [-20, 0], [0, 0], [20, 0], [40, 0]],\r\n            [[-50, 0], [-30, 0], [-10, 0], [10, 0], [30, 0], [50, 0]],\r\n            [[-60, 0], [-40, 0], [-20, 0], [0, 0], [20, 0], [40, 0], [60, 0]],\r\n        ];\r\n        this.time = 0;\r\n    }\r\n    lwgOnStart() {\r\n        TimerAdmin._frameLoop(this.attackInterval, this, () => {\r\n            if (this.mouseP) {\r\n                this.attack_S();\r\n            }\r\n        });\r\n    }\r\n    deathFunc() {\r\n        this._openScene(_SceneName.Defeated, false);\r\n    }\r\n    lwgEvent() {\r\n        this._evReg(_GameEvent.Game.checkEnemyBullet, (Bullet, numBlood) => {\r\n            this.checkOtherRule(Bullet, 40, numBlood);\r\n        });\r\n        this._evReg(_GameEvent.Game.checkBuff, (type) => {\r\n            switch (type) {\r\n                case 0:\r\n                    this.ballisticNum++;\r\n                    break;\r\n                case 1:\r\n                    break;\r\n                case 2:\r\n                    break;\r\n                case 3:\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    move(e) {\r\n        if (this.mouseP) {\r\n            let diffX = e.stageX - this.mouseP.x;\r\n            let diffY = e.stageY - this.mouseP.y;\r\n            this._Owner.x += diffX;\r\n            this._Owner.y += diffY;\r\n            this.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n            if (this._Owner.x > Laya.stage.width) {\r\n                this._Owner.x = Laya.stage.width;\r\n            }\r\n            if (this._Owner.x < 0) {\r\n                this._Owner.x = 0;\r\n            }\r\n            if (this._Owner.y <= 0) {\r\n                this._Owner.y = 0;\r\n            }\r\n            if (this._Owner.y > Laya.stage.height) {\r\n                this._Owner.y = Laya.stage.height;\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    lwgOnStageDown(e) {\r\n        this.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n    }\r\n    lwgOnStageMove(e) {\r\n        this.move(e);\r\n    }\r\n    lwgOnStageUp() {\r\n        this.mouseP = null;\r\n    }\r\n    createWeapon(style, x, y) {\r\n        const Weapon = Tools._Node.createPrefab(_Res._list.prefab2D.Weapon.prefab);\r\n        this._SceneImg('WeaponParent').addChild(Weapon);\r\n        Weapon.addComponent(HeroWeapon);\r\n        Weapon.pos(x, y);\r\n        const Pic = Weapon.getChildByName('Pic');\r\n        Pic.skin = style ? `Game/UI/Game/Hero/Hero_01_weapon_${style}.png` : `Lwg/UI/ui_circle_c_007.png`;\r\n        Weapon.name = style;\r\n        return Weapon;\r\n    }\r\n    ;\r\n    attack_General() {\r\n        const posArr = this.ballisticPos[this.ballisticNum - 1];\r\n        for (let index = 1; index < posArr.length; index++) {\r\n            const pos = posArr[index];\r\n            if (pos) {\r\n                this.createWeapon(null, this._Owner.x + pos[0], this._Owner.y + pos[1]);\r\n            }\r\n        }\r\n    }\r\n    attack_S() {\r\n        const angleArr = this.attack_S_Angle[this.ballisticNum - 1];\r\n        for (let index = 0; index < angleArr.length; index++) {\r\n            const weapon = this.createWeapon(null, this._Owner.x, this._Owner.y);\r\n            weapon.rotation = angleArr[index];\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/Lwg.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Game/_GameEvent.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Game/HeroWeapon.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PreLoad.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Game/BloodBase.ts"
  ]
}
