{
  "code": "import { Admin, DataAdmin, EventAdmin, Tools } from \"../Frame/Lwg\";\r\nimport { _Res } from \"../Frame/_PreLoad\";\r\nimport { Boss } from \"./Boss\";\r\nimport Enemy from \"./Enemy\";\r\nimport { _GameEvent } from \"./_GameEvent\";\r\nexport var _GameData;\r\n(function (_GameData) {\r\n    class _Buff extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.type = {\r\n                Num: 'Num',\r\n                S: 'S',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _Buff();\r\n            }\r\n            return this.ins;\r\n        }\r\n        createBuff(type, Parent, x, y, script) {\r\n            const Buff = Tools._Node.createPrefab(_Res._list.prefab2D.Buff.prefab, Parent, [x, y], script);\r\n            Buff['buffType'] = type;\r\n            return Buff;\r\n        }\r\n    }\r\n    _GameData._Buff = _Buff;\r\n    class _Enemy extends DataAdmin._Table {\r\n        constructor(_EnemyParent) {\r\n            super();\r\n            this._otherPro = {\r\n                quantity: \"quantity\",\r\n                shellNum: \"shellNum\",\r\n                blood: 'blood',\r\n                boss: 'boss',\r\n                speed: 'speed',\r\n            };\r\n            this.EnemyParent = _EnemyParent;\r\n            this._arr = _Res._list.json.Enemy.dataArr;\r\n            this.levelData = this._getObjByName(`level${Admin._game.level}`);\r\n            this.quantity = this.levelData['quantity'];\r\n            this.presentQuantity = 0;\r\n            EventAdmin._register('presentQuantity', this, () => {\r\n                this.presentQuantity--;\r\n            });\r\n        }\r\n        get presentQuantity() {\r\n            return this['_presentQuantity'];\r\n        }\r\n        ;\r\n        set presentQuantity(val) {\r\n            this['_presentQuantity'] = val;\r\n            if (val < 10) {\r\n                this.createEnmey();\r\n            }\r\n            if (val === 0 && this.quantity === 0) {\r\n                EventAdmin._notify(_GameEvent.Game.enemyLandStage);\r\n            }\r\n        }\r\n        ;\r\n        createEnmey() {\r\n            this.quantity--;\r\n            if (this.quantity < 0) {\r\n                this.quantity = 0;\r\n                return;\r\n            }\r\n            this.presentQuantity++;\r\n            const shellNum = this.levelData[this._otherPro.shellNum];\r\n            let shellNumTime = 0;\r\n            const element = Tools._Node.createPrefab(_Res._list.prefab2D.Enemy.prefab, this.EnemyParent);\r\n            shellNumTime++;\r\n            const color = Tools._Array.randomGetOne(['blue', 'yellow', 'red']);\r\n            element.name = `${color}${color}`;\r\n            let speed = Tools._Number.randomOneBySection(this.levelData[this._otherPro.speed][0], this.levelData[this._otherPro.speed][1]);\r\n            speed = Tools._Number.randomOneHalf() == 0 ? -speed : speed;\r\n            element['_EnemyData'] = {\r\n                shell: shellNumTime <= shellNum ? true : false,\r\n                blood: this.levelData['blood'],\r\n                angle: Tools._Number.randomOneBySection(0, 360),\r\n                speed: speed,\r\n                color: color,\r\n            };\r\n            element.addComponent(Enemy);\r\n        }\r\n    }\r\n    _GameData._Enemy = _Enemy;\r\n    class _Boss extends DataAdmin._Table {\r\n        constructor(Parent) {\r\n            super();\r\n            this._otherPro = {\r\n                blood: 'blood',\r\n                specials: 'specials',\r\n                speed: 'speed',\r\n                skills: 'skills',\r\n                bulletPower: 'bulletPower',\r\n            };\r\n            this._arr = _Res._list.json.Boss.dataArr;\r\n            this.levelData = this._getObjByName(`Boss${Admin._game.level}`);\r\n            this.createLevelBoss(Parent);\r\n        }\r\n        getLevelSkill() {\r\n            return this.levelData['skills'];\r\n        }\r\n        getLevelSpeed() {\r\n            return this.levelData['speed'];\r\n        }\r\n        getLevelblood() {\r\n            return this.levelData['blood'];\r\n        }\r\n        getOtherBossSkill() {\r\n            return;\r\n        }\r\n        createLevelBoss(Parent) {\r\n            const element = Tools._Node.createPrefab(_Res._list.prefab2D.Enemy.prefab, Parent);\r\n            element.name = `Boss`;\r\n            let speed = Tools._Number.randomOneBySection(this.getLevelSpeed()[0], this.getLevelSpeed()[1]);\r\n            speed = Tools._Number.randomOneHalf() == 0 ? -speed : speed;\r\n            element['_EnemyData'] = {\r\n                blood: this.getLevelblood(),\r\n                angle: Tools._Number.randomOneBySection(0, 360),\r\n                speed: speed,\r\n                sikllNameArr: this.getLevelSkill(),\r\n            };\r\n            element.addComponent(Boss);\r\n            return element;\r\n        }\r\n    }\r\n    _GameData._Boss = _Boss;\r\n})(_GameData || (_GameData = {}));\r\n",
  "references": [
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/Lwg.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PreLoad.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Game/Boss.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Game/Enemy.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Game/_GameEvent.ts"
  ]
}
