{
  "code": "import { Admin, DataAdmin, Effects2D, TimerAdmin, Tools, _SceneName } from \"./Lwg\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _Game;\r\n(function (_Game) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"heroBlood\"] = \"_Game_calculateBlood\";\r\n        _Event[\"closeScene\"] = \"_Game_closeScene\";\r\n        _Event[\"launch\"] = \"_WeaponSateType_launch\";\r\n        _Event[\"enemyBlood\"] = \"_WeaponSateType_enemyBlood\";\r\n    })(_Event = _Game._Event || (_Game._Event = {}));\r\n    class _EnemyData extends DataAdmin._Table {\r\n        constructor(_EnemyParent) {\r\n            super();\r\n            this._otherPro = {\r\n                quantity: \"quantity\",\r\n                shellNum: \"shellNum\",\r\n                blood: 'blood',\r\n                boss: 'boss',\r\n                speed: 'speed',\r\n            };\r\n            this.EnemyParent = _EnemyParent;\r\n            this._arr = _Res._list.json.Enemy.dataArr;\r\n        }\r\n        createEnmey() {\r\n            const obj = this._getObjByName(`level${Admin._game.level}`);\r\n            const quantity = obj[this._otherPro.quantity];\r\n            const shellNum = obj[this._otherPro.shellNum];\r\n            let shellNumTime = 0;\r\n            for (let index = 0; index < quantity; index++) {\r\n                const element = Tools._Node.createPrefab(_Res._list.prefab2D.Enemy.prefab, this.EnemyParent);\r\n                shellNumTime++;\r\n                const color = Tools._Array.randomGetOne(['blue', 'yellow', 'red']);\r\n                element.name = `${color}${index}`;\r\n                let speed = Tools._Number.randomOneBySection(obj[this._otherPro.speed][0], obj[this._otherPro.speed][1]);\r\n                speed = Tools._Number.randomOneHalf() == 0 ? -speed : speed;\r\n                element['_EnemyData'] = {\r\n                    shell: shellNumTime <= shellNum ? true : false,\r\n                    blood: obj['blood'],\r\n                    angle: Tools._Number.randomOneBySection(0, 360),\r\n                    speed: speed,\r\n                    color: color,\r\n                };\r\n                console.log(element['_EnemyData']['speed']);\r\n                element.addComponent(_Enemy);\r\n            }\r\n        }\r\n    }\r\n    _Game._EnemyData = _EnemyData;\r\n    class _Enemy extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = '';\r\n            this.sateType = {\r\n                activity: '_ctivity',\r\n                death: 'death',\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n            const shell = this._Owner['_EnemyData']['shell'];\r\n            this.Shell = this._Owner.getChildByName('Shell');\r\n            !shell && this.Shell.removeSelf();\r\n            this.Pic = this._Owner.getChildByName('Pic');\r\n            this.Pic.skin = `Game/UI/Game/Enemy/enemy_01_${this._Owner['_EnemyData']['color']}.png`;\r\n            this.blood = this._Owner['_EnemyData']['blood'];\r\n            this.bloodPresnt = this.blood;\r\n            this.bloodPic = this._Owner.getChildByName('Blood').getChildByName('Pic');\r\n            this.bloodWidth = this.bloodPic.width;\r\n            const angle = this._Owner['_EnemyData']['angle'];\r\n            this._Owner.rotation = angle;\r\n            this.speed = this._Owner['_EnemyData']['speed'];\r\n        }\r\n        lwgOnStart() {\r\n            this.state = this.sateType.activity;\r\n            TimerAdmin._frameRandomLoop(100, 1000, this, () => {\r\n                if (this.state == this.sateType.activity) {\r\n                    let bullet = Tools._Node.createPrefab(_Res._list.prefab2D.EnemyBullet.prefab);\r\n                    bullet.addComponent(_EnemyBullet);\r\n                    this._SceneImg('EBparrent').addChild(bullet);\r\n                    bullet.pos(this._gPoint.x, this._gPoint.y);\r\n                }\r\n            });\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                let point = Tools._Point.getRoundPos(this._Owner.rotation += this.speed, this._SceneImg('MobileFrame').width / 2 + this._Owner.height / 2, new Laya.Point(this._SceneImg('Land').width / 2, this._SceneImg('Land').height / 2));\r\n                this._Owner.x = point.x;\r\n                this._Owner.y = point.y;\r\n            });\r\n        }\r\n        lwgEvent() {\r\n            this._evReg(_Event.enemyBlood, (Enemy, num) => {\r\n                if (Enemy === this._Owner) {\r\n                    this.bloodPresnt -= num;\r\n                    this.bloodPic.width = this.bloodWidth * this.bloodPresnt / this.blood;\r\n                    if (this.bloodPresnt <= 0) {\r\n                        for (let index = 0; index < 20; index++) {\r\n                            Effects2D._Particle._spray(Laya.stage, this._gPoint, [10, 30]);\r\n                        }\r\n                        if (this._Owner.parent.numChildren == 1) {\r\n                            this._openScene('Victory');\r\n                        }\r\n                        this._Owner.removeSelf();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _Game._Enemy = _Enemy;\r\n    class _EnemyBullet extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.speed = 2;\r\n        }\r\n        lwgOnStart() {\r\n            let GPoint = this._SceneImg('HeroContent').localToGlobal(new Laya.Point(this._SceneImg('Hero').x, this._SceneImg('Hero').y));\r\n            let p = new Laya.Point(this._gPoint.x - GPoint.x, this._gPoint.y - GPoint.y);\r\n            p.normalize();\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._Owner.x -= p.x * this.speed;\r\n                this._Owner.y -= p.y * this.speed;\r\n                Tools._Node.leaveStage(this._Owner, () => {\r\n                    this._Owner.removeSelf();\r\n                    return;\r\n                });\r\n            });\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                Tools._Node.checkTwoDistance(this._Owner, this._SceneImg('Hero'), 50, () => {\r\n                    this._Owner.removeSelf();\r\n                    this._evNotify(_Event.heroBlood, [1]);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _Game._EnemyBullet = _EnemyBullet;\r\n    class _Weapon extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.launchAcc = 0;\r\n            this.dropAcc = 0;\r\n            this.stateType = {\r\n                launch: 'launch',\r\n                free: 'free',\r\n            };\r\n        }\r\n        get state() {\r\n            return this['Statevalue'] ? this['Statevalue'] : 'launch';\r\n        }\r\n        ;\r\n        set state(_state) {\r\n            this['Statevalue'] = _state;\r\n        }\r\n        ;\r\n        getSpeed() {\r\n            return 20 + 0.1;\r\n        }\r\n        getDropSpeed() {\r\n            return this.dropAcc += 0.5;\r\n        }\r\n        lwgOnAwake() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this.move();\r\n            });\r\n        }\r\n        move() {\r\n            if (this.getSpeed() > 0) {\r\n                let p = Tools._Point.angleAndLenByPoint(this._Owner.rotation - 90, this.getSpeed());\r\n                this._Owner.x += p.x;\r\n                this._Owner.y += p.y;\r\n            }\r\n            else {\r\n                this._Owner.y += this.getDropSpeed();\r\n            }\r\n            !Tools._Node.leaveStage(this._Owner, () => {\r\n                this._Owner.removeSelf();\r\n            }) && this.checkEnemy();\r\n        }\r\n        drop() {\r\n            this.state = this.stateType.free;\r\n            Laya.timer.clearAll(this);\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._Owner.y += 40;\r\n                this._Owner.rotation += 10;\r\n                Tools._Node.leaveStage(this._Owner, () => {\r\n                    this._Owner.removeSelf();\r\n                });\r\n            });\r\n        }\r\n        skill(Enemy) {\r\n            this._evNotify(_Event.enemyBlood, [Enemy, 1]);\r\n            this._Owner.removeSelf();\r\n        }\r\n        checkEnemy() {\r\n            if (this.state === this.stateType.free) {\r\n                return;\r\n            }\r\n            if (this._SceneImg('FrontScenery').getChildByName('Stone')) {\r\n                for (let index = 0; index < this._SceneImg('FrontScenery').numChildren; index++) {\r\n                    const element = this._SceneImg('FrontScenery').getChildAt(index);\r\n                    if (element.name == 'Stone') {\r\n                        let gPStone = this._SceneImg('FrontScenery').localToGlobal(new Laya.Point(element.x, element.y));\r\n                        if (gPStone.distance(this._gPoint.x, this._gPoint.y) < 30) {\r\n                            this.drop();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let index = 0; index < this._SceneImg('EnemyParent').numChildren; index++) {\r\n                const Enemy = this._SceneImg('EnemyParent').getChildAt(index);\r\n                let gPEnemy = this._SceneImg('EnemyParent').localToGlobal(new Laya.Point(Enemy.x, Enemy.y));\r\n                if (gPEnemy.distance(this._gPoint.x, this._gPoint.y) < 50) {\r\n                    let Shell = Enemy.getChildByName('Shell');\r\n                    if (Shell) {\r\n                        const landContentGP = this._SceneImg('Content').localToGlobal(new Laya.Point(this._SceneImg('Land').x, this._SceneImg('Land').y));\r\n                        let angle = Tools._Point.pointByAngle(landContentGP.x - this._gPoint.x, landContentGP.y - this._gPoint.y) + 90;\r\n                        if (210 < angle && angle < 330) {\r\n                            this.drop();\r\n                        }\r\n                        else {\r\n                            this.skill(Enemy);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.skill(Enemy);\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            const LandContentGP = this._SceneImg('Content').localToGlobal(new Laya.Point(this._SceneImg('Land').x, this._SceneImg('Land').y));\r\n            if (LandContentGP.distance(this._gPoint.x, this._gPoint.y) < 150) {\r\n                Laya.timer.clearAll(this);\r\n                this.state = this.stateType.free;\r\n                const lP = this._SceneImg('Land').globalToLocal(this._gPoint);\r\n                this._SceneImg('Land').addChild(this._Owner);\r\n                this._Owner.pos(lP.x, lP.y);\r\n                this._Owner.rotation -= this._SceneImg('Land').rotation;\r\n                const mask = new Laya.Sprite;\r\n                mask.size(200, 300);\r\n                mask.pos(0, Tools._Number.randomOneBySection(20, 30));\r\n                mask.loadImage('Lwg/UI/ui_l_orthogon_white.png');\r\n                this._Owner.mask = mask;\r\n                this._Owner.zOrder = Tools._Number.randomOneBySection(0, 5);\r\n            }\r\n        }\r\n    }\r\n    _Game._Weapon = _Weapon;\r\n    class Game extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Hero = {\r\n                mouseP: null,\r\n                move: (e) => {\r\n                    if (this.Hero.mouseP) {\r\n                        let diffX = e.stageX - this.Hero.mouseP.x;\r\n                        let diffY = e.stageY - this.Hero.mouseP.y;\r\n                        this._ImgVar('HeroContent').x += diffX;\r\n                        this._ImgVar('HeroContent').y += diffY;\r\n                        this.Hero.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n                        if (this._ImgVar('HeroContent').x > Laya.stage.width) {\r\n                            this._ImgVar('HeroContent').x = Laya.stage.width;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').x < 0) {\r\n                            this._ImgVar('HeroContent').x = 0;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').y <= 0) {\r\n                            this._ImgVar('HeroContent').y = 0;\r\n                        }\r\n                        if (this._ImgVar('HeroContent').y > Laya.stage.height) {\r\n                            this._ImgVar('HeroContent').y = Laya.stage.height;\r\n                        }\r\n                    }\r\n                },\r\n                createWeapon: (color, x, y) => {\r\n                    const Weapon = Tools._Node.createPrefab(_Res._list.prefab2D.Weapon.prefab);\r\n                    this._ImgVar('WeaponParent').addChild(Weapon);\r\n                    Weapon.addComponent(_Weapon);\r\n                    Weapon.pos(x, y);\r\n                    const Pic = Weapon.getChildByName('Pic');\r\n                    Pic.skin = `Game/UI/Game/Hero/Hero_01_weapon_${color}.png`;\r\n                    Weapon.name = color;\r\n                    return Weapon;\r\n                }\r\n            };\r\n            this.time = 0;\r\n        }\r\n        lwgOnAwake() {\r\n            this.EnemyData = new _EnemyData(this._ImgVar('EnemyParent'));\r\n            this.EnemyData.createEnmey();\r\n        }\r\n        lwgOnStart() {\r\n            TimerAdmin._frameLoop(1, this, () => {\r\n                this._ImgVar('Land').rotation += 0.1;\r\n            });\r\n        }\r\n        lwgEvent() {\r\n            let bloodNum = 20;\r\n            let _width = 100;\r\n            this._evReg(_Event.heroBlood, (number) => {\r\n                let Blood = this._ImgVar('Blood').getChildAt(0);\r\n                Blood.width = Blood.width - _width / 20;\r\n                bloodNum -= number;\r\n                if (!this['bloodNumSwitch']) {\r\n                    if (bloodNum <= 0) {\r\n                        this['bloodNumSwitch'] = true;\r\n                        this._openScene(_SceneName.Defeated, false);\r\n                    }\r\n                }\r\n            });\r\n            this._evReg(_Event.closeScene, () => {\r\n                this._closeScene();\r\n            });\r\n        }\r\n        lwgOnStageDown(e) {\r\n            this.Hero.mouseP = new Laya.Point(e.stageX, e.stageY);\r\n        }\r\n        lwgOnStageMove(e) {\r\n            this.Hero.move(e);\r\n        }\r\n        lwgOnStageUp() {\r\n            let color;\r\n            this.time++;\r\n            if (this.time == 1) {\r\n                color = 'blue';\r\n            }\r\n            else if (this.time == 2) {\r\n                color = 'yellow';\r\n            }\r\n            else if (this.time == 3) {\r\n                color = 'red';\r\n                this.time = 0;\r\n            }\r\n            this.Hero.createWeapon(color, this._ImgVar('HeroContent').x, this._ImgVar('HeroContent').y);\r\n            this.Hero.mouseP = null;\r\n        }\r\n    }\r\n    _Game.Game = Game;\r\n})(_Game || (_Game = {}));\r\nexport default _Game.Game;\r\n",
  "references": [
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/Lwg.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PreLoad.ts",
    "F:/Work/Game/07_RescueFlowerGirl_2.5.0/Project/RescueFlowerGirl_2.5.0/src/script/Frame/_PropTry.ts"
  ]
}
